"""empty message

Revision ID: ddb73e09c3ad
Revises: abfb7a26378e
Create Date: 2020-07-27 17:42:47.376447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ddb73e09c3ad'
down_revision = 'abfb7a26378e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('actors', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('actors', 'gender',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('actors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'actors', ['name'])
    op.add_column('movies', sa.Column('release_date', sa.String(), nullable=False))
    op.alter_column('movies', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('movies', 'release_date')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('movies', sa.Column('release_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('movies', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('movies', 'release_date')
    op.drop_constraint(None, 'actors', type_='unique')
    op.alter_column('actors', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('actors', 'gender',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('actors', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
